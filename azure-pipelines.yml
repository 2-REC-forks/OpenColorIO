# SPDX-License-Identifier: BSD-3-Clause
# Copyright Contributors to the OpenColorIO Project.

# azure-pipelines build file
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

jobs:
- job: BuildAndTest
  strategy:
    matrix:
      Linux-Clang:
        image: 'ubuntu-16.04'
        cCompiler: /usr/bin/clang
        cxxCompiler: /usr/bin/clang++
      Linux-GCC:
        image: 'ubuntu-16.04'
        cCompiler: /usr/bin/gcc
        cxxCompiler: /usr/bin/g++
      MacOS-Clang:
        image: 'macOS-10.14'
        cCompiler: /usr/bin/clang
        cxxCompiler: /usr/bin/clang++
      Windows-VC:
        image: 'vs2017-win2016'
        cCompiler:
        cxxCompiler:
  pool:
    vmImage: $(image)
  variables:
    CC: $(cCompiler)
    CXX: $(cxxCompiler)
  steps:
  - checkout: self
    clean: true
    fetchDepth: 50
    displayName: Checkout OCIO source
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      architecture: 'x64'
      addToPath: true
    displayName: Add python to PATH
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - bash: |
      conda config \
        --set always_yes True \
        --set show_channel_urls True
      conda config --add channels conda-forge
      conda update conda
      conda create -q -n ocio_env \
        cmake freeglut glew xorg-libxmu xorg-libxi
      conda info
    displayName: Create conda environment
  - bash: |
      mkdir _build
      mkdir _install
    displayName: Create working directories
  - bash: |
      source activate ocio_env
      cmake .. \
        -DCMAKE_INSTALL_PREFIX=../_install \
        -DCMAKE_BUILD_TYPE=Release \
        -DOCIO_BUILD_TESTS=ON \
        -DOCIO_BUILD_GPU_TESTS=OFF \
        -DOCIO_BUILD_DOCS=ON \
        -DOCIO_WARNING_AS_ERROR=ON
    workingDirectory: _build
    displayName: Configure OCIO
  - bash: |
      source activate ocio_env
      cmake --build . --target install
    workingDirectory: _build
    displayName: Build OCIO
  - bash: |
      source activate ocio_env
      ctest -V
    workingDirectory: _build
    displayName: Test OCIO

trigger:
- ci_test
