# SPDX-License-Identifier: BSD-3-Clause
# Copyright Contributors to the OpenColorIO Project.

# azure-pipelines build file
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

trigger:
  batch: true
  branches:
    include:
    - ci_test
    # - master
    # - RB-*

# pr:
#   autoCancel: true
#   branches:
#     include:
#     - master
#     - RB-*

jobs:

# ==============================================================================
# Linux
# ==============================================================================
# - job: Linux
#   strategy:
#     matrix:
#       Ubuntu 18.04 GCC 6:
#         agentImage: 'ubuntu-16.04'
#         containerImage: michdolan/opencolorio:ubuntu18_gcc6
#   pool:
#     vmImage: $(agentImage)
#   container: $[ variables['containerImage'] ]

#   steps:

#   - template: share/azure/build-steps.yml
#     parameters:
#       cxxFlags: -std=c++14 -fPIC

# ==============================================================================
# macOS
# ==============================================================================
- job: macOS
  strategy:
    matrix:
      10.14 AppleClang 10.0:
        agentImage: 'macOS-10.14'
  pool:
    vmImage: $(agentImage)
  
  steps:

  # - bash: |
  #     sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
  #   condition: and(succeeded(), eq(variables['agentImage'], 'macOS-10.14'))
  #   displayName: Install macOS SDK headers

  # - bash: |
  #     brew update
  #     brew upgrade cmake 
  #     brew install glew
  #     brew install pyenv
  #   displayName: Install dependencies

  - bash: |
      brew update
      brew upgrade cmake 
      brew install glew
    displayName: Install dependencies

  # - bash: |
  #     echo 'eval "$(pyenv init -)"' >> .bash_profile
  #     source .bash_profile
  #     env PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install -v 2.7.16
  #     pyenv global 2.7.16
  #   displayName: Configure Python

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
    displayName: Configure Python

  # - template: share/azure/build-steps.yml
  #   parameters:
  #     cxxFlags: -std=c++14 -fPIC -Wno-deprecated-register
  #     pyLib: $(python-config --prefix)/lib/libpython2.7.dylib
  #     pyIncludeDir: $(python-config --prefix)/include/python2.7
  #     pyExe: $(which python2)

  - bash: |
      ls /Users/vsts/hostedtoolcache/Python/2.7.16/x64/lib
      echo "====="
      ls /Users/vsts/hostedtoolcache/Python/2.7.16/x64/include
      echo "====="
      ls /Users/vsts/hostedtoolcache/Python/2.7.16/x64/bin
      echo "====="
      ls $(python -c "import sys,os;print(os.path.dirname(os.path.dirname(sys.executable)))")/lib
      echo "====="
      ls $(python -c "import sys,os;print(os.path.dirname(os.path.dirname(sys.executable)))")/include
      echo "====="
      ls $(python -c "import sys,os;print(os.path.dirname(os.path.dirname(sys.executable)))")/bin

  - template: share/azure/build-steps.yml
    parameters:
      cxxFlags: -std=c++14 -fPIC -Wno-deprecated-register
      cmakeOpts: |
        -DPYTHON_LIBRARY=$(python -c "import sys,os;print(os.path.dirname(os.path.dirname(sys.executable)))")/lib/libpython2.7.dylib \
        -DPYTHON_INCLUDE_DIR=$(python -c "import sys,os;print(os.path.dirname(os.path.dirname(sys.executable)))")/include/python2.7 \
        -DPYTHON_EXECUTABLE=$(which python)

# ==============================================================================
# Windows
# ==============================================================================
# - job: Windows
#   strategy:
#     matrix:
#       2016 MSVC 14.16 (shared):
#         agentImage: 'vs2017-win2016'
#         buildSharedLibs: ON
#         buildDocs: ON
#       2016 MSVC 14.16 (static):
#         agentImage: 'vs2017-win2016'
#         buildSharedLibs: OFF
#         buildDocs: OFF
#   pool:
#     vmImage: $(agentImage)

#   steps:

#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '2.7'
#     displayName: Configure Python

#   - template: share/azure/build-steps.yml
#     parameters:
#       buildSharedLibs: $(buildSharedLibs)
#       buildDocs: $(buildDocs)
#       cxxFlags: /std:c++14 /EHsc /D WIN32 /D NDEBUG
#       verbose: ON
#       cmakeOpts: |
#         -DCMAKE_GENERATOR_PLATFORM=x64 \
#         -DPYTHON_LIBRARY=$(python -c "import sys,os;print(os.path.dirname(sys.executable))")/libs/python27.lib \
#         -DPYTHON_INCLUDE_DIR=$(python -c "import sys,os;print(os.path.dirname(sys.executable))")/include \
#         -DPYTHON_EXECUTABLE=$(which python)
