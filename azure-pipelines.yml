# SPDX-License-Identifier: BSD-3-Clause
# Copyright Contributors to the OpenColorIO Project.

# azure-pipelines build file
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

jobs:

- job: Linux
  strategy:
    matrix:
      Ubuntu 18.04 GCC 6:
        agentImage: 'ubuntu-16.04'
        containerImage: michdolan/opencolorio:ubuntu18_gcc6
      # Clang:
      #   agentImage: 'ubuntu-16.04'
      #   containerImage:  
  pool:
    vmImage: $(agentImage)
  container: $[ variables['containerImage'] ]

  steps:

  - checkout: self
    clean: true
    fetchDepth: 50
    displayName: Checkout OCIO source

  - bash: |
      mkdir _build
      mkdir _install
    displayName: Create working directories

  - bash: |
      cmake .. \
        -DCMAKE_INSTALL_PREFIX=../_install \
        -DCMAKE_BUILD_TYPE=Release \
        -DOCIO_BUILD_TESTS=ON \
        -DOCIO_BUILD_GPU_TESTS=OFF \
        -DOCIO_BUILD_DOCS=ON \
        -DOCIO_WARNING_AS_ERROR=ON \
        -DCMAKE_CXX_FLAGS="-std=c++14 -fPIC"
    workingDirectory: _build
    displayName: Configure OCIO

  - bash: |
      cmake --build . --target install
    workingDirectory: _build
    displayName: Build OCIO

  - bash: |
      ctest -V
    workingDirectory: _build
    displayName: Test OCIO



- job: macOS
  strategy:
    matrix:
      clang:
        agentImage: 'macOS-10.14'
  pool:
    vmImage: $(agentImage)
  
  steps:

  - bash: |
      brew update
      brew install freeglut glew
      brew upgrade cmake pyenv
    displayName: Install dependencies

  - bash: |
      echo 'eval "$(pyenv init -)"' >> .bash_profile
      source .bash_profile
      export PYTHON_CONFIGURE_OPTS="--enable-framework"
      pyenv install -v 2.7.16
      pyenv global 2.7.16
      export OPTIONS="$OPTIONS \
        -DPYTHON_LIBRARY=$(python-config --prefix)/lib/libpython2.7.dylib"
      export OPTIONS="$OPTIONS \
        -DPYTHON_INCLUDE_DIR=$(python-config --prefix)/include/python2.7"
      export OPTIONS="$OPTIONS \
        -DPYTHON_EXECUTABLE=$(which python2)"
    displayName: Configure Python



# - job: Windows
#   strategy:
#     matrix:
#       Windows-VC:
#         agentImage: 'vs2017-win2016'
#         cCompiler:
#         cxxCompiler:
#   pool:
#     vmImage: $(agentImage)

trigger:
- ci_test
