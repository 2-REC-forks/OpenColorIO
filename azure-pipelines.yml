# SPDX-License-Identifier: BSD-3-Clause
# Copyright Contributors to the OpenColorIO Project.

# azure-pipelines build file
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      clang:
        cCompiler: clang
        cxxCompiler: clang++
      gcc:
        cCompiler: gcc
        cxxCompiler: g++
  steps:
  - checkout: self
    clean: true
    fetchDepth: 50
    displayName: Checkout OCIO source
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      architecture: 'x64'
      addToPath: true
    displayName: Add python to PATH
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - bash: |
      conda config \
        --set always_yes True \
        --set show_channel_urls True
      conda config --add channels conda-forge
      conda update conda
      conda create -q -n ocio_env \
        cmake freeglut glew xorg-libxmu xorg-libxi
      conda info
    displayName: Create conda environment
  - bash: |
      source activate ocio_env
      cmake .. \
        -DCMAKE_C_COMPILER=$(cCompiler) \
        -DCMAKE_CXX_COMPILER=$(cxxCompiler) \
        -DCMAKE_INSTALL_PREFIX=../_install \
        -DCMAKE_BUILD_TYPE=Release \
        -DOCIO_BUILD_TESTS=ON \
        -DOCIO_BUILD_GPU_TESTS=OFF \
        -DOCIO_BUILD_DOCS=ON \
        -DOCIO_WARNING_AS_ERROR=ON
    workingDirectory: _build
    failOnStderr: true
    displayName: Configure OCIO
  - bash: |
      source activate ocio_env
      cmake --build . --target install
    workingDirectory: _build
    failOnStderr: true
    displayName: Build OCIO
  - bash: |
      source activate ocio_env
      ctest -V
    workingDirectory: _build
    failOnStderr: true
    displayName: Test OCIO

#  - job: macOS
#    pool:
#      vmImage: 'macOS-10.14'
#    steps:
#    - script:

#  - job: Windows
#    pool:
#      vmImage: 'vs2017-win2016'
#    steps:
#    - script:

trigger:
- ci_test
